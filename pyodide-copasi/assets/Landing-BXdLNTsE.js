import{d as A,r as g,i as I,a as p,o as a,c as h,u as s,b as C,s as F,F as x,e as o,t as f,f as w,g as u,M as N,w as T,h as L,S as v}from"./index-DgMfwYEd.js";const $={class:"col-12"},R=o("div",{class:"card"},[o("h5",null,"COPASI Vue Demo"),o("p",null," This page runs pyodide, vue3 and within python-copasi and basico. You can choose from the models below, or upload your own to simulate them. While the python runtime is loading, the application is unfortunately unresponsive. (I'll figure this out later.) ")],-1),E={class:"card"},O=o("h5",null,"Current Model",-1),j={class:"p-fluid formgrid grid"},z=o("div",{class:"field col-12 md:col-6"},[o("p",null,"Model Name")],-1),P={class:"field col-12 md:col-6"},W=o("div",{class:"field col-12 md:col-6"},[o("p",null,"Time Unit")],-1),q={class:"field col-12 md:col-6"},H=o("div",{class:"field col-12 md:col-6"},[o("p",null,"Quantity Unit")],-1),Q={class:"field col-12 md:col-6"},Y={key:1,class:"col-12"},Z={class:"flex justify-content-center"},G={class:"col-12 md:col-6 lg:col-6"},J={class:"p-buttonset"},K={class:"card"},X=o("h5",null,"Models",-1),ee={class:"p-fluid formgrid grid"},oe={class:"col-12 md:col-6"},le=o("p",null,"Choose a model to simulate:",-1),te={class:"col-12 md:col-6"},ie=o("p",null,"or upload your own",-1),ne=o("p",null,"Drag and drop files here.",-1),se=o("div",{class:"col-12"},[o("p",null,[L(" The disease models come from "),o("a",{href:"https://dismolib.uvadcos.io",target:"_blank"},"dismolib"),L(". ")])],-1),ce=A({__name:"Landing",setup(de){const M=g([{label:"Level 3 Version 1",command:()=>{c(3,1)}},{label:"Level 3 Version 2",command:()=>{c(3,2)}},{separator:!0},{label:"Level 2 Version 4",command:()=>{c(2,4)}},{label:"Level 2 Version 1",command:()=>{c(2,1)}},{separator:!0},{label:"Level 1 Version 2",command:()=>{c(1,2)}}]),e=I("$state"),b="/pyodide-copasi/",S=i=>{k(i.files)},k=i=>{if(e==null)return;const t=i[0],l=new FileReader;l.onload=m=>{const r=m.target.result;v.loadModelFromContent(e,window,r)},l.readAsText(t)},B=()=>{if((e==null?void 0:e.copasi)==null)return;const i=new Blob([e.copasi],{type:"application/x-copasi"}),t=window.URL.createObjectURL(i),l=document.createElement("a");l.setAttribute("hidden",""),l.setAttribute("href",t),l.setAttribute("download",e.modelName+".cps"),document.body.appendChild(l),l.click(),document.body.removeChild(l)},V=()=>{if((e==null?void 0:e.sbml)==null)return;const i=new Blob([e.sbml],{type:"application/sbml+xml"}),t=window.URL.createObjectURL(i),l=document.createElement("a");l.setAttribute("hidden",""),l.setAttribute("href",t),l.setAttribute("download",e.modelName+".xml"),document.body.appendChild(l),l.click(),document.body.removeChild(l)},c=(i,t)=>{if((e==null?void 0:e.pyodide)==null)return;const l=v.exportSBML(e,window,i,t),m=new Blob([l],{type:"application/sbml+xml"}),r=window.URL.createObjectURL(m),d=document.createElement("a");d.setAttribute("hidden",""),d.setAttribute("href",r);const _=e.modelName+"_L"+i.toString()+"V"+t.toString()+".xml";d.setAttribute("download",_),document.body.appendChild(d),d.click(),document.body.removeChild(d)},n=i=>{e!=null&&(e.modelImage="",e.modelDescription="",fetch(`${b}diseaseModels/${i}.cps`).then(t=>t.text()).then(t=>{v.loadModelFromContent(e,window,t),fetch(`${b}diseaseModels/captions/${i}.md`).then(l=>l.text()).then(l=>{e.modelImage=`${b}diseaseModels/images/${i}.png`,e.modelDescription=l})}))},D=g([{label:"Airborn",icon:"pi pi-fw",items:[{label:"CoViD-19",icon:"pi pi-fw",model:"covid",command:()=>{n("covid")}},{label:"Ebola",icon:"pi pi-fw",model:"ebola",command:()=>{n("ebola")}},{label:"Measles",icon:"pi pi-fw",model:"measles",command:()=>{n("measles")}},{label:"Tuberculosis",icon:"pi pi-fw",model:"tuberculosis",command:()=>{n("tuberculosis")}},{label:"CoViD-19 (with delay in recovering)",icon:"pi pi-fw",model:"covid_mexico",command:()=>{n("covid_mexico")}},{label:"Diphtheria",icon:"pi pi-fw",model:"diphtheria",command:()=>{n("diphtheria")}}]},{label:"Sexually transmitted",icon:"pi pi-fw",items:[{label:"HSV-2",icon:"pi pi-fw",model:"hsv-2",command:()=>{n("hsv-2")}}]},{label:"Vector borne",icon:"pi pi-fw",items:[{label:"Malaria",icon:"pi pi-fw",model:"malaria",command:()=>{n("malaria")}},{label:"Zika",icon:"pi pi-fw",model:"zika",command:()=>{n("zika")}},{label:"Dengue",icon:"pi pi-fw",model:"dengue",command:()=>{n("dengue")}},{label:"Visceral Leishmaniasis",icon:"pi pi-fw",model:"visceralleishmaniasis",command:()=>{n("visceralleishmaniasis")}}]},{label:"Water borne",icon:"pi pi-fw",items:[{label:"Cholera",icon:"pi pi-fw",model:"cholera",command:()=>{n("cholera")}},{label:"Dysentery",icon:"pi pi-fw",model:"dysentery",command:()=>{n("dysentery")}},{label:"Typhoid",icon:"pi pi-fw",model:"typhoid",command:()=>{n("typhoid")}}]}]);return(i,t)=>{var y;const l=p("Image"),m=p("Button"),r=p("SplitButton"),d=p("TieredMenu"),_=p("FileUpload");return a(),h("div",$,[R,s(e)===void 0||s(e)===null||!s(e).pyodideLoaded?(a(),C(s(F),{key:0,mode:"indeterminate",style:{height:"6px"}})):(a(),h(x,{key:1},[o("div",E,[O,o("div",j,[z,o("div",P,[o("p",null,f(s(e).modelName),1)]),((y=s(e))==null?void 0:y.units)!=null?(a(),h(x,{key:0},[W,o("div",q,[o("p",null,f(s(e).units.time_unit),1)]),H,o("div",Q,[o("p",null,f(s(e).units.quantity_unit),1)])],64)):w("",!0),s(e).modelImage!=""?(a(),h("div",Y,[o("div",Z,[u(l,{src:s(e).modelImage,alt:s(e).modelDescription,width:"80%"},null,8,["src","alt"])])])):w("",!0),s(e).modelDescription!=""?(a(),C(s(N),{key:2,source:s(e).modelDescription},null,8,["source"])):w("",!0),o("div",G,[o("span",J,[u(m,{icon:"pi pi-arrow-circle-down",title:"Download current COPASI file",label:"COPASI",class:"mr-2 mb-2",onClick:t[0]||(t[0]=U=>B())}),u(r,{icon:"pi pi-arrow-circle-down",model:M.value,title:"Download current file as SBML",label:"SBML",class:"p-button-secondary mr-2 mb-2",onClick:t[1]||(t[1]=U=>V())},null,8,["model"])])])])]),o("div",K,[X,o("div",ee,[o("div",oe,[le,u(d,{model:D.value,width:"400"},null,8,["model"])]),o("div",te,[ie,u(_,{mode:"advanced",name:"upload[]",auto:!0,showCancelButton:!1,showUploadButton:!1,maxFileSize:1e6,onUploader:S,customUpload:""},{empty:T(()=>[ne]),_:1})]),se])])],64))])}}});export{ce as default};
